// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// CaseInfluence_nonsmooth
Rcpp::List CaseInfluence_nonsmooth(arma::vec a, arma::mat B, arma::vec c, double lam, double alpha_0, double alpha_1, double beta_0_w0, arma::vec beta_w0, arma::vec theta_w0, std::string model_class, std::string influence_measure);
RcppExport SEXP _Caseinflu_CaseInfluence_nonsmooth(SEXP aSEXP, SEXP BSEXP, SEXP cSEXP, SEXP lamSEXP, SEXP alpha_0SEXP, SEXP alpha_1SEXP, SEXP beta_0_w0SEXP, SEXP beta_w0SEXP, SEXP theta_w0SEXP, SEXP model_classSEXP, SEXP influence_measureSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha_1(alpha_1SEXP);
    Rcpp::traits::input_parameter< double >::type beta_0_w0(beta_0_w0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_w0(beta_w0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_w0(theta_w0SEXP);
    Rcpp::traits::input_parameter< std::string >::type model_class(model_classSEXP);
    Rcpp::traits::input_parameter< std::string >::type influence_measure(influence_measureSEXP);
    rcpp_result_gen = Rcpp::wrap(CaseInfluence_nonsmooth(a, B, c, lam, alpha_0, alpha_1, beta_0_w0, beta_w0, theta_w0, model_class, influence_measure));
    return rcpp_result_gen;
END_RCPP
}
// LocalInfluence_nonsmooth
arma::vec LocalInfluence_nonsmooth(arma::vec a, arma::mat B, arma::vec c, double lam, double alpha_0, double alpha_1, double beta_0_w0, arma::vec beta_w0, arma::vec theta_w0, std::string model_class, std::string influence_measure);
RcppExport SEXP _Caseinflu_LocalInfluence_nonsmooth(SEXP aSEXP, SEXP BSEXP, SEXP cSEXP, SEXP lamSEXP, SEXP alpha_0SEXP, SEXP alpha_1SEXP, SEXP beta_0_w0SEXP, SEXP beta_w0SEXP, SEXP theta_w0SEXP, SEXP model_classSEXP, SEXP influence_measureSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type a(aSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type B(BSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type c(cSEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< double >::type alpha_0(alpha_0SEXP);
    Rcpp::traits::input_parameter< double >::type alpha_1(alpha_1SEXP);
    Rcpp::traits::input_parameter< double >::type beta_0_w0(beta_0_w0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type beta_w0(beta_w0SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_w0(theta_w0SEXP);
    Rcpp::traits::input_parameter< std::string >::type model_class(model_classSEXP);
    Rcpp::traits::input_parameter< std::string >::type influence_measure(influence_measureSEXP);
    rcpp_result_gen = Rcpp::wrap(LocalInfluence_nonsmooth(a, B, c, lam, alpha_0, alpha_1, beta_0_w0, beta_w0, theta_w0, model_class, influence_measure));
    return rcpp_result_gen;
END_RCPP
}
// CaseInfluence_logistic
Rcpp::List CaseInfluence_logistic(arma::mat X, arma::vec Y, arma::vec theta_0, double t_max, double lam, double epsilon, std::string method, std::string influence_measure);
RcppExport SEXP _Caseinflu_CaseInfluence_logistic(SEXP XSEXP, SEXP YSEXP, SEXP theta_0SEXP, SEXP t_maxSEXP, SEXP lamSEXP, SEXP epsilonSEXP, SEXP methodSEXP, SEXP influence_measureSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_0(theta_0SEXP);
    Rcpp::traits::input_parameter< double >::type t_max(t_maxSEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    Rcpp::traits::input_parameter< std::string >::type influence_measure(influence_measureSEXP);
    rcpp_result_gen = Rcpp::wrap(CaseInfluence_logistic(X, Y, theta_0, t_max, lam, epsilon, method, influence_measure));
    return rcpp_result_gen;
END_RCPP
}
// LocalInfluence_logistic
arma::vec LocalInfluence_logistic(arma::mat X, arma::vec Y, arma::vec theta_0, double lam, std::string influence_measure);
RcppExport SEXP _Caseinflu_LocalInfluence_logistic(SEXP XSEXP, SEXP YSEXP, SEXP theta_0SEXP, SEXP lamSEXP, SEXP influence_measureSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_0(theta_0SEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< std::string >::type influence_measure(influence_measureSEXP);
    rcpp_result_gen = Rcpp::wrap(LocalInfluence_logistic(X, Y, theta_0, lam, influence_measure));
    return rcpp_result_gen;
END_RCPP
}
// CaseInfluence_poisson
Rcpp::List CaseInfluence_poisson(arma::mat X, arma::vec Y, arma::vec theta_0, double t_max, double lam, double epsilon, std::string method);
RcppExport SEXP _Caseinflu_CaseInfluence_poisson(SEXP XSEXP, SEXP YSEXP, SEXP theta_0SEXP, SEXP t_maxSEXP, SEXP lamSEXP, SEXP epsilonSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_0(theta_0SEXP);
    Rcpp::traits::input_parameter< double >::type t_max(t_maxSEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    Rcpp::traits::input_parameter< double >::type epsilon(epsilonSEXP);
    Rcpp::traits::input_parameter< std::string >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(CaseInfluence_poisson(X, Y, theta_0, t_max, lam, epsilon, method));
    return rcpp_result_gen;
END_RCPP
}
// LocalInfluence_poisson
arma::vec LocalInfluence_poisson(arma::mat X, arma::vec Y, arma::vec theta_0, double lam);
RcppExport SEXP _Caseinflu_LocalInfluence_poisson(SEXP XSEXP, SEXP YSEXP, SEXP theta_0SEXP, SEXP lamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type theta_0(theta_0SEXP);
    Rcpp::traits::input_parameter< double >::type lam(lamSEXP);
    rcpp_result_gen = Rcpp::wrap(LocalInfluence_poisson(X, Y, theta_0, lam));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Caseinflu_CaseInfluence_nonsmooth", (DL_FUNC) &_Caseinflu_CaseInfluence_nonsmooth, 11},
    {"_Caseinflu_LocalInfluence_nonsmooth", (DL_FUNC) &_Caseinflu_LocalInfluence_nonsmooth, 11},
    {"_Caseinflu_CaseInfluence_logistic", (DL_FUNC) &_Caseinflu_CaseInfluence_logistic, 8},
    {"_Caseinflu_LocalInfluence_logistic", (DL_FUNC) &_Caseinflu_LocalInfluence_logistic, 5},
    {"_Caseinflu_CaseInfluence_poisson", (DL_FUNC) &_Caseinflu_CaseInfluence_poisson, 7},
    {"_Caseinflu_LocalInfluence_poisson", (DL_FUNC) &_Caseinflu_LocalInfluence_poisson, 4},
    {NULL, NULL, 0}
};

RcppExport void R_init_Caseinflu(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
